<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nGvy/3+afmWE0x/zjwAAAABJRU5ErkJggg==
</value>
  </data>
</root>